;; ---------------------------------------------------
;;|                    CONDITIONS                     |
;; ---------------------------------------------------
(defun compile-if (exp env fenv namef)
  (let ((sinon (gensym "sinon"))
	(finSi (gensym "finSi")))
    (append (compiler (car exp) env fenv namef)  
	    '((CMP :R0 (:DIESE nil)))
	    `((JEQ (@ ,sinon)))
	    (compiler (cadr exp) env fenv namef) 
	    `((JMP (@ ,finSi)))
	    `((@ ,sinon))  
	    (compiler (caddr exp) env fenv namef)
	    `((@ ,finSi))
		)
	)
)

(defun compile-cond (exp labelfin env fenv namef)
  (if (null exp)
    (append '((MOVE (:DIESE NIL) :R0)) `((@ , labelfin)))   
    (let ((labelcond (gensym "labelcond")))                              
      (append (compiler (caar exp) env fenv namef)                
	      '((CMP :R0 (:DIESE NIL)))                                
	      `((JEQ (@ ,labelcond)))                             
	      (compiler (cadar exp) env fenv namef)              
	      `((JMP (@ ,labelfin)))                               
	      `((@ ,labelcond))                                    
	      (compile-cond (cdr exp) labelfin env fenv namef)
			)
		)
	)
)